# application initialization
# Set window dimensions to 0 to maximize.
startup.electron.window.default.width: 0
startup.electron.window.default.height: 0
startup.render.fps: 60
startup.background_color: '#082839'
startup.show_color_picker: true
startup.show_stats_module: true
startup.show_menu: true
startup.point_cloud_directory:
startup.annotations_path:

# parameters for loading a tile
tile_manager.tile_scale: [10, 10, 10] # conversion from tile index numbers to physical dimensions
tile_manager.super_tile_scale: [100, 100, 50] # ditto; must contain multiples of tile_scale
tile_manager.initial_super_tiles_to_load: 20
tile_manager.sampling_step: 5

# annotator controls
annotator.add_points_to_estimated_ground_plane: true
annotator.draw_bounding_box: false

# persistence of a data file
output.annotations.json.path: ./data/annotations-utm.json
output.annotations.kml.path: ./data/path.kml
output.annotations.autosave.directory.path: ./data/autosave
output.annotations.autosave.interval.seconds: 300

# persist trajectories
output.trajectory.csv.path: ./data/trajectory.csv

# convert a data file to another format
# You'll need to build the MapAccumulator project to get the jar file onto your system.
# https://github.com/Signafy/Sandbox/tree/master/CloudServices/MapAccumulator#build
conversion.kml.jar: java -classpath /Users/clyde/dev/mapper/Sandbox/CloudServices/MapAccumulator/target/scala-2.11/mapper-viewer.jar
conversion.kml.main_class: ai.mapper.app.AnnotatorToTiles
conversion.kml.input.path: ./data/annotations-lla.json
conversion.kml.output.path: ./data/annotator-tiles.kml
