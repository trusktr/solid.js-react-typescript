# user local preferences
preferences.directory: mapper-annotator

# application initialization
startup.electron.window.default.width: 800
startup.electron.window.default.height: 600
startup.animation.fps: 10
startup.render.fps: 20
startup.kiosk_mode: false
startup.background_color: '#444444'
startup.show_control_panel: true
startup.show_stats_module: true
startup.show_status_panel: true
startup.show_menu: true
startup.show_dev_tools: true
startup.point_cloud_directory:
startup.point_cloud_bounding_box:
startup.annotations_path:
startup.watch_for_rebuilds.enable: false

# parameters for loading a tile
tile_manager.tile_message_format: BaseGeometryTileMessage # PointCloudTileMessage or BaseGeometryTileMessage; used when reading tiles from local file system
tile_manager.utm_tile_scale: [8, 8, 8] # conversion from tile index numbers to physical dimensions
tile_manager.super_tile_scale: [16, 8, 16] # ditto; must contain multiples of utm_tile_scale
tile_manager.initial_super_tiles_to_load: 8
tile_manager.maximum_super_tiles_to_load: 10000
tile_manager.maximum_points_to_load: 1000000
tile_manager.sampling_step: 1
tile_manager.stats_display.enable: false

# retrieving tiles from a remote service
tile_client.service.health_check.interval.seconds: 3
tile_client.service.host: localhost
tile_client.service.port: 30123
tile_client.tile_scale: _008_008_008

# annotator controls
annotator.add_points_to_estimated_ground_plane: true
annotator.generate_voxels_on_point_load: false
annotator.draw_bounding_box: false
annotator.axes_helper_length: 10
annotator.compass_rose_length: 50
annotator.point_render_size: 1.0
annotator.area_of_interest.enable: false
annotator.area_of_interest.size: [50, 50, 50]

# persistence of a data file
output.annotations.json.path: ./data/annotations.json
output.annotations.kml.path: ./data/waypoints.kml
output.annotations.autosave.directory.path: ./data/autosave
output.annotations.autosave.interval.seconds: 300

# Fly-through trajectory file
fly_through.trajectory_path.list:
fly_through.animation.fps: 10

# persist trajectories
output.trajectory.csv.path: ./data/trajectory.csv

# for photos displayed within the 3D scene
image_manager.image.opacity: 0.5
image_manager.image.wireframe.visible: false

# Location server info
location_server.status.health_check.interval.seconds: 5
location_server.host: localhost
location_server.port: 5564
location_server.status.port: 26600
