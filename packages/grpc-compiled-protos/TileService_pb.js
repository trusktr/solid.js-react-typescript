/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var CoordinateReferenceSystem_pb = require('./CoordinateReferenceSystem_pb.js');
goog.exportSymbol('proto.mapper.models.RadiusSearchMessage', null, global);
goog.exportSymbol('proto.mapper.models.RangeSearchMessage', null, global);
goog.exportSymbol('proto.mapper.models.SearchTilesRequest', null, global);
goog.exportSymbol('proto.mapper.models.SearchTilesResponse', null, global);
goog.exportSymbol('proto.mapper.models.TileInstanceMessage', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mapper.models.SearchTilesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mapper.models.SearchTilesRequest.repeatedFields_, proto.mapper.models.SearchTilesRequest.oneofGroups_);
};
goog.inherits(proto.mapper.models.SearchTilesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mapper.models.SearchTilesRequest.displayName = 'proto.mapper.models.SearchTilesRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mapper.models.SearchTilesRequest.repeatedFields_ = [3];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.mapper.models.SearchTilesRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.mapper.models.SearchTilesRequest.SpatialSearchCase = {
  SPATIAL_SEARCH_NOT_SET: 0,
  RANGE_SEARCH: 1,
  RADIUS_SEARCH: 2
};

/**
 * @return {proto.mapper.models.SearchTilesRequest.SpatialSearchCase}
 */
proto.mapper.models.SearchTilesRequest.prototype.getSpatialSearchCase = function() {
  return /** @type {proto.mapper.models.SearchTilesRequest.SpatialSearchCase} */(jspb.Message.computeOneofCase(this, proto.mapper.models.SearchTilesRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mapper.models.SearchTilesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mapper.models.SearchTilesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mapper.models.SearchTilesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mapper.models.SearchTilesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rangeSearch: (f = msg.getRangeSearch()) && proto.mapper.models.RangeSearchMessage.toObject(includeInstance, f),
    radiusSearch: (f = msg.getRadiusSearch()) && proto.mapper.models.RadiusSearchMessage.toObject(includeInstance, f),
    layerIdsList: jspb.Message.getRepeatedField(msg, 3),
    getIfEmpty: jspb.Message.getFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mapper.models.SearchTilesRequest}
 */
proto.mapper.models.SearchTilesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mapper.models.SearchTilesRequest;
  return proto.mapper.models.SearchTilesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mapper.models.SearchTilesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mapper.models.SearchTilesRequest}
 */
proto.mapper.models.SearchTilesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mapper.models.RangeSearchMessage;
      reader.readMessage(value,proto.mapper.models.RangeSearchMessage.deserializeBinaryFromReader);
      msg.setRangeSearch(value);
      break;
    case 2:
      var value = new proto.mapper.models.RadiusSearchMessage;
      reader.readMessage(value,proto.mapper.models.RadiusSearchMessage.deserializeBinaryFromReader);
      msg.setRadiusSearch(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addLayerIds(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGetIfEmpty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mapper.models.SearchTilesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mapper.models.SearchTilesRequest.serializeBinaryToWriter(this, writer);
  const x = writer.getResultBuffer();
  // console.info('ser', x);
  return x;
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mapper.models.SearchTilesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mapper.models.SearchTilesRequest.serializeBinaryToWriter = function(message, writer) {
	// console.info('serializeBinaryToWriter', message);
  var f = undefined;
  f = message.getRangeSearch();
  // console.info('r1', f);
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mapper.models.RangeSearchMessage.serializeBinaryToWriter
    );
  }
  f = message.getRadiusSearch();
	// console.info('r2', f);
	if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mapper.models.RadiusSearchMessage.serializeBinaryToWriter
    );
  }
  f = message.getLayerIdsList();
	// console.info('r3', f);
	if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getGetIfEmpty();
	// console.info('r4', f);
	if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional RangeSearchMessage range_search = 1;
 * @return {?proto.mapper.models.RangeSearchMessage}
 */
proto.mapper.models.SearchTilesRequest.prototype.getRangeSearch = function() {
  return /** @type{?proto.mapper.models.RangeSearchMessage} */ (
    jspb.Message.getWrapperField(this, proto.mapper.models.RangeSearchMessage, 1));
};


/** @param {?proto.mapper.models.RangeSearchMessage|undefined} value */
proto.mapper.models.SearchTilesRequest.prototype.setRangeSearch = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.mapper.models.SearchTilesRequest.oneofGroups_[0], value);
};


proto.mapper.models.SearchTilesRequest.prototype.clearRangeSearch = function() {
  this.setRangeSearch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mapper.models.SearchTilesRequest.prototype.hasRangeSearch = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RadiusSearchMessage radius_search = 2;
 * @return {?proto.mapper.models.RadiusSearchMessage}
 */
proto.mapper.models.SearchTilesRequest.prototype.getRadiusSearch = function() {
  return /** @type{?proto.mapper.models.RadiusSearchMessage} */ (
    jspb.Message.getWrapperField(this, proto.mapper.models.RadiusSearchMessage, 2));
};


/** @param {?proto.mapper.models.RadiusSearchMessage|undefined} value */
proto.mapper.models.SearchTilesRequest.prototype.setRadiusSearch = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.mapper.models.SearchTilesRequest.oneofGroups_[0], value);
};


proto.mapper.models.SearchTilesRequest.prototype.clearRadiusSearch = function() {
  this.setRadiusSearch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mapper.models.SearchTilesRequest.prototype.hasRadiusSearch = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string layer_ids = 3;
 * @return {!Array.<string>}
 */
proto.mapper.models.SearchTilesRequest.prototype.getLayerIdsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array.<string>} value */
proto.mapper.models.SearchTilesRequest.prototype.setLayerIdsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.mapper.models.SearchTilesRequest.prototype.addLayerIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.mapper.models.SearchTilesRequest.prototype.clearLayerIdsList = function() {
  this.setLayerIdsList([]);
};


/**
 * optional bool get_if_empty = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.mapper.models.SearchTilesRequest.prototype.getGetIfEmpty = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.mapper.models.SearchTilesRequest.prototype.setGetIfEmpty = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mapper.models.SearchTilesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mapper.models.SearchTilesResponse.repeatedFields_, null);
};
goog.inherits(proto.mapper.models.SearchTilesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mapper.models.SearchTilesResponse.displayName = 'proto.mapper.models.SearchTilesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mapper.models.SearchTilesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mapper.models.SearchTilesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mapper.models.SearchTilesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mapper.models.SearchTilesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mapper.models.SearchTilesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tileInstancesList: jspb.Message.toObjectList(msg.getTileInstancesList(),
    proto.mapper.models.TileInstanceMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mapper.models.SearchTilesResponse}
 */
proto.mapper.models.SearchTilesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mapper.models.SearchTilesResponse;
  return proto.mapper.models.SearchTilesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mapper.models.SearchTilesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mapper.models.SearchTilesResponse}
 */
proto.mapper.models.SearchTilesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mapper.models.TileInstanceMessage;
      reader.readMessage(value,proto.mapper.models.TileInstanceMessage.deserializeBinaryFromReader);
      msg.addTileInstances(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mapper.models.SearchTilesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mapper.models.SearchTilesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mapper.models.SearchTilesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mapper.models.SearchTilesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTileInstancesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mapper.models.TileInstanceMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TileInstanceMessage tile_instances = 1;
 * @return {!Array.<!proto.mapper.models.TileInstanceMessage>}
 */
proto.mapper.models.SearchTilesResponse.prototype.getTileInstancesList = function() {
  return /** @type{!Array.<!proto.mapper.models.TileInstanceMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mapper.models.TileInstanceMessage, 1));
};


/** @param {!Array.<!proto.mapper.models.TileInstanceMessage>} value */
proto.mapper.models.SearchTilesResponse.prototype.setTileInstancesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mapper.models.TileInstanceMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mapper.models.TileInstanceMessage}
 */
proto.mapper.models.SearchTilesResponse.prototype.addTileInstances = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mapper.models.TileInstanceMessage, opt_index);
};


proto.mapper.models.SearchTilesResponse.prototype.clearTileInstancesList = function() {
  this.setTileInstancesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mapper.models.TileInstanceMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mapper.models.TileInstanceMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mapper.models.TileInstanceMessage.displayName = 'proto.mapper.models.TileInstanceMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mapper.models.TileInstanceMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.mapper.models.TileInstanceMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mapper.models.TileInstanceMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mapper.models.TileInstanceMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && CoordinateReferenceSystem_pb.SpatialTileIndexMessage.toObject(includeInstance, f),
    version: jspb.Message.getFieldWithDefault(msg, 2, 0),
    layersMap: (f = msg.getLayersMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mapper.models.TileInstanceMessage}
 */
proto.mapper.models.TileInstanceMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mapper.models.TileInstanceMessage;
  return proto.mapper.models.TileInstanceMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mapper.models.TileInstanceMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mapper.models.TileInstanceMessage}
 */
proto.mapper.models.TileInstanceMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new CoordinateReferenceSystem_pb.SpatialTileIndexMessage;
      reader.readMessage(value,CoordinateReferenceSystem_pb.SpatialTileIndexMessage.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVersion(value);
      break;
    case 3:
      var value = msg.getLayersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mapper.models.TileInstanceMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mapper.models.TileInstanceMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mapper.models.TileInstanceMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mapper.models.TileInstanceMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      CoordinateReferenceSystem_pb.SpatialTileIndexMessage.serializeBinaryToWriter
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLayersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional SpatialTileIndexMessage id = 1;
 * @return {?proto.mapper.models.SpatialTileIndexMessage}
 */
proto.mapper.models.TileInstanceMessage.prototype.getId = function() {
  return /** @type{?proto.mapper.models.SpatialTileIndexMessage} */ (
    jspb.Message.getWrapperField(this, CoordinateReferenceSystem_pb.SpatialTileIndexMessage, 1));
};


/** @param {?proto.mapper.models.SpatialTileIndexMessage|undefined} value */
proto.mapper.models.TileInstanceMessage.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.mapper.models.TileInstanceMessage.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mapper.models.TileInstanceMessage.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 version = 2;
 * @return {number}
 */
proto.mapper.models.TileInstanceMessage.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.mapper.models.TileInstanceMessage.prototype.setVersion = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * map<string, string> layers = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.mapper.models.TileInstanceMessage.prototype.getLayersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.mapper.models.TileInstanceMessage.prototype.clearLayersMap = function() {
  this.getLayersMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mapper.models.RangeSearchMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mapper.models.RangeSearchMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mapper.models.RangeSearchMessage.displayName = 'proto.mapper.models.RangeSearchMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mapper.models.RangeSearchMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.mapper.models.RangeSearchMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mapper.models.RangeSearchMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mapper.models.RangeSearchMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    corner1: (f = msg.getCorner1()) && CoordinateReferenceSystem_pb.GeographicPoint3DMessage.toObject(includeInstance, f),
    corner2: (f = msg.getCorner2()) && CoordinateReferenceSystem_pb.GeographicPoint3DMessage.toObject(includeInstance, f),
    scale: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mapper.models.RangeSearchMessage}
 */
proto.mapper.models.RangeSearchMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mapper.models.RangeSearchMessage;
  return proto.mapper.models.RangeSearchMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mapper.models.RangeSearchMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mapper.models.RangeSearchMessage}
 */
proto.mapper.models.RangeSearchMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new CoordinateReferenceSystem_pb.GeographicPoint3DMessage;
      reader.readMessage(value,CoordinateReferenceSystem_pb.GeographicPoint3DMessage.deserializeBinaryFromReader);
      msg.setCorner1(value);
      break;
    case 2:
      var value = new CoordinateReferenceSystem_pb.GeographicPoint3DMessage;
      reader.readMessage(value,CoordinateReferenceSystem_pb.GeographicPoint3DMessage.deserializeBinaryFromReader);
      msg.setCorner2(value);
      break;
    case 3:
      var value = /** @type {!proto.mapper.models.SpatialTileScale} */ (reader.readEnum());
      msg.setScale(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mapper.models.RangeSearchMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mapper.models.RangeSearchMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mapper.models.RangeSearchMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mapper.models.RangeSearchMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCorner1();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      CoordinateReferenceSystem_pb.GeographicPoint3DMessage.serializeBinaryToWriter
    );
  }
  f = message.getCorner2();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      CoordinateReferenceSystem_pb.GeographicPoint3DMessage.serializeBinaryToWriter
    );
  }
  f = message.getScale();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional GeographicPoint3DMessage corner_1 = 1;
 * @return {?proto.mapper.models.GeographicPoint3DMessage}
 */
proto.mapper.models.RangeSearchMessage.prototype.getCorner1 = function() {
  return /** @type{?proto.mapper.models.GeographicPoint3DMessage} */ (
    jspb.Message.getWrapperField(this, CoordinateReferenceSystem_pb.GeographicPoint3DMessage, 1));
};


/** @param {?proto.mapper.models.GeographicPoint3DMessage|undefined} value */
proto.mapper.models.RangeSearchMessage.prototype.setCorner1 = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.mapper.models.RangeSearchMessage.prototype.clearCorner1 = function() {
  this.setCorner1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mapper.models.RangeSearchMessage.prototype.hasCorner1 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GeographicPoint3DMessage corner_2 = 2;
 * @return {?proto.mapper.models.GeographicPoint3DMessage}
 */
proto.mapper.models.RangeSearchMessage.prototype.getCorner2 = function() {
  return /** @type{?proto.mapper.models.GeographicPoint3DMessage} */ (
    jspb.Message.getWrapperField(this, CoordinateReferenceSystem_pb.GeographicPoint3DMessage, 2));
};


/** @param {?proto.mapper.models.GeographicPoint3DMessage|undefined} value */
proto.mapper.models.RangeSearchMessage.prototype.setCorner2 = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.mapper.models.RangeSearchMessage.prototype.clearCorner2 = function() {
  this.setCorner2(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mapper.models.RangeSearchMessage.prototype.hasCorner2 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SpatialTileScale scale = 3;
 * @return {!proto.mapper.models.SpatialTileScale}
 */
proto.mapper.models.RangeSearchMessage.prototype.getScale = function() {
  return /** @type {!proto.mapper.models.SpatialTileScale} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.mapper.models.SpatialTileScale} value */
proto.mapper.models.RangeSearchMessage.prototype.setScale = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mapper.models.RadiusSearchMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mapper.models.RadiusSearchMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mapper.models.RadiusSearchMessage.displayName = 'proto.mapper.models.RadiusSearchMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mapper.models.RadiusSearchMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.mapper.models.RadiusSearchMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mapper.models.RadiusSearchMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mapper.models.RadiusSearchMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    centerPoint: (f = msg.getCenterPoint()) && CoordinateReferenceSystem_pb.GeographicPoint3DMessage.toObject(includeInstance, f),
    radius: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    scale: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mapper.models.RadiusSearchMessage}
 */
proto.mapper.models.RadiusSearchMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mapper.models.RadiusSearchMessage;
  return proto.mapper.models.RadiusSearchMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mapper.models.RadiusSearchMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mapper.models.RadiusSearchMessage}
 */
proto.mapper.models.RadiusSearchMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new CoordinateReferenceSystem_pb.GeographicPoint3DMessage;
      reader.readMessage(value,CoordinateReferenceSystem_pb.GeographicPoint3DMessage.deserializeBinaryFromReader);
      msg.setCenterPoint(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRadius(value);
      break;
    case 3:
      var value = /** @type {!proto.mapper.models.SpatialTileScale} */ (reader.readEnum());
      msg.setScale(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mapper.models.RadiusSearchMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mapper.models.RadiusSearchMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mapper.models.RadiusSearchMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mapper.models.RadiusSearchMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCenterPoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      CoordinateReferenceSystem_pb.GeographicPoint3DMessage.serializeBinaryToWriter
    );
  }
  f = message.getRadius();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getScale();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional GeographicPoint3DMessage center_point = 1;
 * @return {?proto.mapper.models.GeographicPoint3DMessage}
 */
proto.mapper.models.RadiusSearchMessage.prototype.getCenterPoint = function() {
  return /** @type{?proto.mapper.models.GeographicPoint3DMessage} */ (
    jspb.Message.getWrapperField(this, CoordinateReferenceSystem_pb.GeographicPoint3DMessage, 1));
};


/** @param {?proto.mapper.models.GeographicPoint3DMessage|undefined} value */
proto.mapper.models.RadiusSearchMessage.prototype.setCenterPoint = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.mapper.models.RadiusSearchMessage.prototype.clearCenterPoint = function() {
  this.setCenterPoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mapper.models.RadiusSearchMessage.prototype.hasCenterPoint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double radius = 2;
 * @return {number}
 */
proto.mapper.models.RadiusSearchMessage.prototype.getRadius = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.mapper.models.RadiusSearchMessage.prototype.setRadius = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional SpatialTileScale scale = 3;
 * @return {!proto.mapper.models.SpatialTileScale}
 */
proto.mapper.models.RadiusSearchMessage.prototype.getScale = function() {
  return /** @type {!proto.mapper.models.SpatialTileScale} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.mapper.models.SpatialTileScale} value */
proto.mapper.models.RadiusSearchMessage.prototype.setScale = function(value) {
  jspb.Message.setField(this, 3, value);
};


goog.object.extend(exports, proto.mapper.models);
